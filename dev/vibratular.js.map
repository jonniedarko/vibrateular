{"version":3,"file":"vibratular.js","names":[],"mappings":"","sources":["vibratular.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({\"./app/vibratular\":[function(require,module,exports){\n/**\n * Created by jonnie on 16 Jan 2015.\n */\nangular.module('vibratular', [])\n\t.directive('vb', require('./vb.directive.js'))\n\t.controller('test', function($scope){\n\t\t$scope.hello = \"Hello World!!\"\n\t\t$scope.pattern = [50, 100, 200, 100, 400, 100, 800, 100, 1000];\n\t\t$scope.pattern2 = [1000];\n\t});\n\n},{\"./vb.directive.js\":\"/Users/i311181/Repo/mine/slush/vibrateular/app/vibratular/vb.directive.js\"}],\"/Users/i311181/Repo/mine/slush/vibrateular/app/vibratular/vb.directive.js\":[function(require,module,exports){\n/**\n * Created by jonnie on 25 Jan 2015.\n */\n\nmodule.exports = function(){\n\n\tfunction vibrate(pattern, _sleep, delay, loop, animation){\n\n\t\tif(_sleep){\n\t\t\tpattern = addSleepAndLoops(pattern, _sleep, delay, loop);\n\t\t}\n\t\tconsole.log('pattern', pattern);\n\t\twindow.navigator.vibrate(pattern);\n\t\tsetShakeInterval(pattern, delay, animation);\n\n\t}\n\n\tvar body = document.getElementsByTagName('body')[0];\n\n\tfunction setShakeInterval(intervals, initialWait){\n\t\tvar animate;\n\n\t\tvar index = 0;\n\t\tvar len = intervals.length;\n\t\tvar callback = function( ){\n\t\t\tif( index < len ) {\n\t\t\t\tif (animate) {\n\t\t\t\t\tbody.classList.add(animation);\n\t\t\t\t\tanimate = false;\n\t\t\t\t} else {\n\t\t\t\t\tbody.classList.remove(animation);\n\t\t\t\t\tanimate = true;\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tsetTimeout(callback, intervals[index]);\n\t\t\t}else {\n\t\t\t\tbody.classList.remove(animation);\n\t\t\t}\n\t\t};\n\n\t\tif(initialWait){\n\t\t\tsetTimeout(callback(intervals[index]))\n\t\t\tindex++\n\t\t}\n\t\telse{\n\t\t\tcallback(intervals[index]);\n\t\t}\n\t};\n\n\tfunction addSleepAndLoops(pattern, sleeptime, intialSleep, loops){\n\t\tvar start = intialSleep ? 0 : 1;\n\t\tvar numOfLoops = loops || 1;\n\t\tvar p = pattern.slice();\n\t\tfor(var i = start; i < p.length +1 ; i++){\n\t\t\tp.splice(i,0, sleeptime);\n\t\t\ti++;\n\t\t};\n\t\tif(!loops || loops === 1) return p;\n\n\t\tvar loopedPattern = [];\n\t\tfor(var i = 0; i < numOfLoops; i++) {\n\t\t\tvar loop = p.slice();\n\t\t\tloopedPattern = loopedPattern.concat(loop);\n\t\t}\n\n\t\treturn loopedPattern;\n\t}\n\n\n\treturn {\n\t\trestrict: 'A',\n\t\tscope:{\n\t\t\ttime: '@vbTime',\n\t\t\tpattern: '=vbPattern',\n\t\t\tvbSleep: '@vbSleep',\n\t\t\tvbLoop: '@vbLoop'\n\t\t},\n\t\tlink: function(scope, elem, attrs){\n\t\t\telem.bind('click', function(){\n\t\t\t\tvibrate(scope.pattern, scope.vbSleep, false, 1, 'vibrate');\n\t\t\t\tscope.$apply();\n\t\t\t});\n\t\t}\n\t};\n\n};\n},{}]},{},[\"./app/vibratular\"]);\n"],"sourceRoot":"/source/"}