{"version":3,"file":"vibratular.js","names":[],"mappings":"","sources":["vibratular.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({\"./app/vibratular\":[function(require,module,exports){\n/**\n * Created by jonnie on 16 Jan 2015.\n */\nangular.module('vibratular', [])\n\t.directive('vb', require('./vb.directive.js'))\n\t.controller('test', function($scope){\n\t\t$scope.hello = \"Hello World!!\"\n\t\t$scope.pattern = [50, 100, 200, 400, 800, 1000];\n\t\t$scope.pattern2 = [{on:50, off:0}, {on:100, off:100}, {on:200, off:200}, {on:400, off:400}, {on:800, off:800}, {on:1000, off:1000}];\n\t});\n\n},{\"./vb.directive.js\":\"/Users/i311181/Repo/mine/slush/vibrateular/app/vibratular/vb.directive.js\"}],\"/Users/i311181/Repo/mine/slush/vibrateular/app/vibratular/vb.directive.js\":[function(require,module,exports){\n/**\n * Created by jonnie on 25 Jan 2015.\n */\n\nmodule.exports = function ($window){\n\t//var vb =\n\n\tfunction vibrate(time, pattern, loop){\n\t\tvar _time = time || 100;\n\n\t\tif(!pattern && !loop ) {\n\t\t\tconsole.log('pattern', pattern);\n\t\t\tconsole.log('loop', loop);\n\t\t\t$window.navigator.vibrate(_time);\n\t\t\treturn;\n\t\t}\n\t\tif(pattern){\n\t\t\tvar count = loop || 1;\n\t\t\tconsole.log('pattern', pattern);\n\t\t\tvibratePattern(pattern);\n\t\t\t/*for(var i = 0; i < count; i++){\n\t\t\t\tfor(var index = 0, len = pattern.length; index < len ; index++){\n\t\t\t\t\tconsole.log('index['+index+']', pattern[index]);\n\t\t\t\t\tsetTimeout($window.navigator.vibrate(pattern[index]), pattern[index] + 100);\n\t\t\t\t}\n\t\t\t}*/\n\t\t}\n\t}// end vibrate\n\n\tfunction vibratePattern (pattern, index) {\n\n\t\tvar i = index || 0;\n\t\tvar timeout = //pattern[i] ||\n\t\t\ti > 0 ? pattern[i - 1] +200 : 0;\n\n\t\tsetTimeout(function () {\n\t\t\t$window.navigator.vibrate(pattern[i]);\n\t\t\tconsole.log('i = ' + i + ' | pattern['+i+'] = '+pattern[i]+ ' | timeout = '+timeout);\n\t\t\tif (i < pattern.length - 1) vibratePattern(pattern, i+1);      //  decrement i and call myLoop again if i > 0\n\t\t}, timeout);\n\t};\n\n\treturn{\n\t\trestrict: 'A',\n\t\tscope:{\n\t\t\ttime: '@vbTime',\n\t\t\tpattern: '=vbPattern'\n\t\t},\n\t\tlink: function(scope, elem, attrs){\n\t\t\tconsole.log('scope.vbTime', scope.time);\n\t\t\t//elem[0].onclick($window.navigator.vibrate(1000));\n\t\t\telem.bind('click', function(){\n\n\t\t\t\tvibrate(scope.time, scope.pattern, null);\n\t\t\t\tscope.$apply();\n\t\t\t})\n\n\t\t}\n\t}\n\n};\n},{}]},{},[\"./app/vibratular\"]);\n"],"sourceRoot":"/source/"}